version: '3'
services:
  # Global services
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: global_nginx_proxy
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    privileged: true
    environment:
      - HTTPS_METHOD=noredirect
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - bdic3025j-des-cipher
      - instrument_shop
      - bdic3023j-software-methodology-q-a-platform
      - comp3019j-web-application-development-grocery-list-website
      - fyp_offer_master_nginx
      - oauth_center_application_prod
      - oauth_center_application_demo
      - jupyter_notebook_reader
    networks:
      - offer_master_network
      - instrument_shop_network
      - oath_center_network
      - comp3019j_network
      - bdic3023j_network
      - bdic3025j_network
      - jupyter_notebook_reader_network
      - maintenance_network
      - grafana_network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    depends_on:
      - nginx-proxy
    environment:
      - DEFAULT_EMAIL=me@yuyangwang.org
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    network_mode: bridge
    restart: always

  oauth_center_application_prod:
    image: echocool/oauth_center_django:latest
    container_name: oauth_center_application_prod
    deploy:
      resources:
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - DEBUG=False
      - VIRTUAL_HOST=oauth.yuyangwang.org,auth.yuyangwang.org
      - LETSENCRYPT_HOST=oauth.yuyangwang.org,auth.yuyangwang.org
      - VIRTUAL_PORT=8080
    expose:
      - "8080"
    networks:
      - oath_center_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/test/health/" ]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: on-failure

  jupyter_notebook_reader:
    image: echocool/jupyter_notebook_reader:${VERSION:-latest}
    container_name: jupyter_notebook_reader
    environment:
      - VIRTUAL_HOST=jupyter.demo.yuyangwang.org,jupyter-reader.demo.yuyangwang.org
      - LETSENCRYPT_HOST=jupyter.demo.yuyangwang.org,jupyter-reader.demo.yuyangwang.org
      - VIRTUAL_PORT=5000
    networks:
      - jupyter_notebook_reader_network
    expose:
      - "5000"
    restart: on-failure

  oauth_center_application_demo:
    image: echocool/oauth_center_django:latest
    container_name: oauth_center_django_demo
    environment:
      - DEBUG=False
      - VIRTUAL_HOST=oauth.demo.yuyangwang.org,auth.demo.yuyangwang.org
      - LETSENCRYPT_HOST=oauth.demo.yuyangwang.org,auth.demo.yuyangwang.org
      - VIRTUAL_PORT=8080
    expose:
      - "8080"
    networks:
      - oath_center_network
    restart: on-failure

  bdic3025j-des-cipher:
    image: echocool/bdic3025j-security-privacy-des-algorithm-cipher:${VERSION:-latest}
    container_name: bdic3025j-security-privacy-des-algorithm-cipher
    environment:
      - VIRTUAL_HOST=bdic3025j.demo.yuyangwang.org,des.demo.yuyangwang.org
      - LETSENCRYPT_HOST=bdic3025j.demo.yuyangwang.org,des.demo.yuyangwang.org
      - VIRTUAL_PORT=80
    restart: on-failure
    networks:
      - bdic3025j_network
    expose:
      - "80"

  instrument_shop:
    image: echocool/comp3030j_software_engineering_project_musical_instrument_shop:${VERSION:-latest}
    container_name: instrument_shop
    environment:
      - VIRTUAL_HOST=comp3030j.demo.yuyangwang.org,instrument-shop.demo.yuyangwang.org
      - LETSENCRYPT_HOST=comp3030j.demo.yuyangwang.org,instrument-shop.demo.yuyangwang.org
      - VIRTUAL_PORT=8080
    networks:
      - instrument_shop_network
    expose:
      - "8080"
    restart: on-failure


  bdic3023j-software-methodology-q-a-platform:
    image: echocool/bdic3023j-software-methodology-q-a-platform:${VERSION:-latest}
    container_name: bdic3023j-software-methodology-q-a-platform
    environment:
      - VIRTUAL_HOST=bdic3023j.demo.yuyangwang.org,qa.demo.yuyangwang.org
      - LETSENCRYPT_HOST=bdic3023j.demo.yuyangwang.org,qa.demo.yuyangwang.org
      - VIRTUAL_PORT=5000
    expose:
      - "5000"
    networks:
      - bdic3023j_network
    restart: on-failure



  comp3019j-web-application-development-grocery-list-website:
    image: echocool/comp3019j-web-application-development-grocery-list-website:${VERSION:-latest}
    container_name: comp3019j-web-application-development-grocery-list-website
    networks:
      - comp3019j_network
    expose:
      - "5000"
    environment:
      - VIRTUAL_HOST=comp3019j.demo.yuyangwang.org,grocery-list.demo.yuyangwang.org
      - LETSENCRYPT_HOST=comp3019j.demo.yuyangwang.org,grocery-list.demo.yuyangwang.org
      - VIRTUAL_PORT=5000
    restart: on-failure

  # Offer master project
  fyp_offer_master_nginx:
    image: echocool/fyp_offer_master_nginx:${VERSION:-latest}
    container_name: fyp_offer_master_reverse_proxy
    depends_on:
      - fyp_offer_master_springboot_admin
      - fyp_offer_master_springboot
      - fyp_offer_master_vue_user
      - fyp_offer_master_vue_admin
      - fyp_offer_master_portainer
    expose:
      - "80"
      - "443"
    environment:
      - VIRTUAL_HOST=comp3032j.demo.yuyangwang.org,offer-master.demo.yuyangwang.org
      - LETSENCRYPT_HOST=comp3032j.demo.yuyangwang.org,offer-master.demo.yuyangwang.org
      - VIRTUAL_PORT=80
    networks:
      - offer_master_network
    restart: on-failure

  fyp_offer_master_springboot_admin:
    image: echocool/fyp_offer_master_springboot_admin:${VERSION:-latest}
    container_name: fyp_offer_master_springboot_admin
    expose:
      - "8081"
    networks:
      - offer_master_network
    restart: on-failure

  # springboot backend
  fyp_offer_master_springboot:
    image: echocool/fyp_offer_master_springboot:${VERSION:-latest}
    container_name: fyp_offer_master_springboot
    depends_on:
      fyp_offer_master_db:
        condition: service_healthy
    environment:
      - SERVER_ADDRESS=fyp_offer_master_springboot
      - DB_URL=jdbc:mysql://fyp_offer_master_db:3306/offermaster
      - DB_USERNAME=root
      - DB_PASSWORD=offermaster
      - DB_DRIVER=com.mysql.cj.jdbc.Driver
      - DB_PLATFORM=
      - OAUTH_ECHOCOOL_REDIRECT_URL=http://comp3032j.demo.yuyangwang.org/login
    expose:
      - "8080"
    networks:
      - offer_master_network
    restart: on-failure


  # user portal
  fyp_offer_master_vue_user:
    image: echocool/fyp_offer_master_vue_user:${VERSION:-latest}
    container_name: fyp_offer_master_vue_user
    depends_on:
      - fyp_offer_master_springboot
    expose:
      - "8080"
    networks:
      - offer_master_network
    restart: on-failure


  # admin portal
  fyp_offer_master_vue_admin:
    image: echocool/fyp_offer_master_vue_admin:${VERSION:-latest}
    container_name: fyp_offer_master_vue_admin
    depends_on:
      - fyp_offer_master_springboot
    expose:
      - "8080"
    networks:
      - offer_master_network
    restart: on-failure


  fyp_offer_master_django_ml:
    image: echocool/fyp_offer_master_django_ml:${VERSION:-latest}
    container_name: fyp_offer_master_django_ml
    depends_on:
      - fyp_offer_master_springboot
    expose:
      - "8080"
    networks:
      - offer_master_network
    restart: on-failure

  fyp_offer_master_portainer:
    image: portainer/portainer-ce
    privileged: true
    restart: always
    expose:
      - "9000"
    ports:
      - "8800:8000"
      - "9900:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`ipa-008.ucd.ie`) && PathPrefix(`/portainer`)"
      - "traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer"
      - "traefik.http.routers.whoami.middlewares=portainer-stripprefix@docker"
      - "traefik.http.routers.whoami.entrypoints=web-secure"
      - "traefik.http.routers.whoami.tls=false"
      - "traefik.http.services.whoami.loadbalancer.server.scheme=http"
      - "traefik.http.services.whoami.loadbalancer.server.port=9000"
    networks:
      - offer_master_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - fyp_offer_master_portainer_data_volume:/data


  fyp_offer_master_db:
    image: hsheth2/mysql-low-memory:8.0
    restart: always
    environment:
      - MYSQL_DATABASE=offermaster
      - MYSQL_ROOT_PASSWORD=offermaster
    expose:
      - "3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 5s
      retries: 100
    networks:
      - offer_master_network

  fyp_offer_master_phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: fyp_offer_master_phpmyadmin
    environment:
      PMA_HOST: fyp_offer_master_db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_ABSOLUTE_URI: http://ipa-008.ucd.ie/phpmyadmin
    restart: always
    networks:
      - offer_master_network
    ports:
      - "8088:80"

  influxdb:
    container_name: influxdb
    image: influxdb:2.6.1-alpine
    networks:
      - grafana_network
    environment:
      - VIRTUAL_HOST=influxdb.demo.yuyangwang.org
      - LETSENCRYPT_HOST=influxdb.demo.yuyangwang.org
      - VIRTUAL_PORT=8086
    volumes:
      - influxdb-lib:/var/lib/influxdb2
    env_file:
      # BE SURE TO CHANGE THIS LINE BEFORE GOING TO PRODUCTION
      - ./influx2.env
    expose:
      - "8086"
    restart: always
    privileged: true

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    environment:
      - VIRTUAL_HOST=prometheus.demo.yuyangwang.org
      - LETSENCRYPT_HOST=prometheus.demo.yuyangwang.org
      - VIRTUAL_PORT=9090
    networks:
      - grafana_network
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    expose:
      - "9090"

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:9.4.9
    networks:
      - grafana_network
    environment:
      - VIRTUAL_HOST=grafana.demo.yuyangwang.org
      - LETSENCRYPT_HOST=grafana.demo.yuyangwang.org
      - VIRTUAL_PORT=3000
    volumes:
      # Note: The 'ro' option specifies that the volume is mounted in read-only mode.
      # However, certain files such as grafana.ini may require write access. Be mindful of security implications when removing ':ro'.
      # Docs : https://docs.docker.com/compose/compose-file/compose-file-v3/#short-syntax-3
      - ./grafana/etc:/etc/grafana:ro
      - grafana-lib:/var/lib/grafana
      - grafana-log:/var/log/grafana
    links:
      - influxdb:influxdb
    env_file:
      # BE SURE TO CHANGE THIS LINE BEFORE GOING TO PRODUCTION
      - ./grafana.env
    expose:
      - "3000"
    depends_on:
      - influxdb
    restart: always
    privileged: true

volumes:
  fyp_offer_master_db_data_volume:
  fyp_offer_master_portainer_data_volume:
  conf:
  vhost:
  html:
  certs:
  acme:
  influxdb-lib:
  grafana-lib:
  grafana-log:
  prometheus_data:

networks:
  offer_master_network:
  comp3019j_network:
  oath_center_network:
  bdic3023j_network:
  instrument_shop_network:
  bdic3025j_network:
  jupyter_notebook_reader_network:
  maintenance_network:
  grafana_network: